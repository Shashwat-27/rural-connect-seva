import { useState } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { useAuth } from '@/contexts/AuthContext';
import { toast } from '@/hooks/use-toast';

interface MedicalCase {
  id: string;
  patient_id: string;
  prescription: string;
  prescribed_medicines: string[];
  doctor_notes: string;
  created_at: string;
  patients: {
    name: string;
    age: number;
    phone: string;
    address: string;
  };
}

export const usePrescriptionDownload = () => {
  const [isDownloading, setIsDownloading] = useState(false);
  const { user } = useAuth();

  const downloadPrescription = async (medicalCase: MedicalCase) => {
    if (!user || user.role !== 'operator') {
      toast({
        title: "Access Denied",
        description: "Only operators can download prescriptions",
        variant: "destructive",
      });
      return;
    }

    setIsDownloading(true);

    try {
      // Record download in database
      const { error: downloadError } = await supabase
        .from('prescription_downloads')
        .insert({
          case_id: medicalCase.id,
          operator_id: user.id,
        });

      if (downloadError) {
        console.error('Failed to record download:', downloadError);
      }

      // Generate prescription content
      const prescriptionContent = `
PRESCRIPTION

Patient Details:
Name: ${medicalCase.patients.name}
Age: ${medicalCase.patients.age}
Phone: ${medicalCase.patients.phone}
Address: ${medicalCase.patients.address}

Date: ${new Date(medicalCase.created_at).toLocaleDateString()}
Case ID: ${medicalCase.id}

PRESCRIPTION:
${medicalCase.prescription || 'No prescription provided'}

MEDICINES:
${medicalCase.prescribed_medicines?.length > 0 
  ? medicalCase.prescribed_medicines.map((med, index) => `${index + 1}. ${med}`).join('\n')
  : 'No medicines prescribed'
}

DOCTOR NOTES:
${medicalCase.doctor_notes || 'No additional notes'}

---
This prescription was generated by Telemedicine System
Generated on: ${new Date().toLocaleString()}
      `.trim();

      // Create and download file
      const blob = new Blob([prescriptionContent], { type: 'text/plain' });
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `prescription_${medicalCase.patients.name.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.txt`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);

      toast({
        title: "Download Complete",
        description: "Prescription downloaded successfully",
      });

    } catch (error) {
      console.error('Download failed:', error);
      toast({
        title: "Download Failed",
        description: "Failed to download prescription",
        variant: "destructive",
      });
    } finally {
      setIsDownloading(false);
    }
  };

  return {
    downloadPrescription,
    isDownloading,
  };
};